// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II 64-Bit Version 13.0 (Build Build 232 06/12/2013)
// Created on Mon Nov 04 18:40:32 2013

PPgen_wordslice PPgen_wordslice_inst
(
	.Y(Y_sig) ,	// input [7:0] Y_sig
	.Single(Single_sig) ,	// input [3:0] Single_sig
	.Double(Double_sig) ,	// input [3:0] Double_sig
	.Negate(Negate_sig) ,	// input [3:0] Negate_sig
	.PP3(PP3_sig) ,	// output [8:0] PP3_sig
	.PP2(PP2_sig) ,	// output [8:0] PP2_sig
	.PP1(PP1_sig) ,	// output [8:0] PP1_sig
	.PP0(PP0_sig) ,	// output [8:0] PP0_sig
	.Sign3(Sign3_sig) ,	// output  Sign3_sig
	.Sign2(Sign2_sig) ,	// output  Sign2_sig
	.Sign1(Sign1_sig) ,	// output  Sign1_sig
	.Sign0(Sign0_sig) 	// output  Sign0_sig
);

